"use strict";(self.webpackChunkbanking_api_workshop=self.webpackChunkbanking_api_workshop||[]).push([[656],{5600:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"account-information-service/api/get-accounts","title":"Get Accounts","description":"Retrieve list of authorized accounts","source":"@site/docs/account-information-service/api/get-accounts.api.mdx","sourceDirName":"account-information-service/api","slug":"/account-information-service/api/get-accounts","permalink":"/banking-api-workshop/docs/account-information-service/api/get-accounts","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"get-accounts","title":"Get Accounts","description":"Retrieve list of authorized accounts","sidebar_label":"Get Accounts","hide_title":true,"hide_table_of_contents":true},"sidebar":"docs","previous":{"title":"Account Information Service API","permalink":"/banking-api-workshop/docs/account-information-service/api/accounts"},"next":{"title":"Get Account Details","permalink":"/banking-api-workshop/docs/account-information-service/api/get-account-details"}}');var i=t(4848),s=t(8453);const c={id:"get-accounts",title:"Get Accounts",description:"Retrieve list of authorized accounts",sidebar_label:"Get Accounts",hide_title:!0,hide_table_of_contents:!0},d="Get Accounts",a={},o=[{value:"Parameters",id:"parameters",level:2},{value:"Response",id:"response",level:2},{value:"200 OK",id:"200-ok",level:3},{value:"400 Bad Request",id:"400-bad-request",level:3},{value:"401 Unauthorized",id:"401-unauthorized",level:3},{value:"403 Forbidden",id:"403-forbidden",level:3},{value:"404 Not Found",id:"404-not-found",level:3},{value:"405 Method Not Allowed",id:"405-method-not-allowed",level:3},{value:"500 Internal Server Error",id:"500-internal-server-error",level:3},{value:"501 Not Implemented",id:"501-not-implemented",level:3},{value:"503 Service Unavailable",id:"503-service-unavailable",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"get-accounts",children:"Get Accounts"})}),"\n",(0,i.jsx)("div",{className:"api-method get",children:(0,i.jsxs)("div",{className:"api-method__header",children:[(0,i.jsx)("span",{className:"api-method__verb",children:"GET"}),(0,i.jsx)("span",{className:"api-method__path",children:"/accounts"})]})}),"\n",(0,i.jsx)(n.p,{children:"Return the list of all accounts accessible for the logged in user."}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"In"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"cursor"}),(0,i.jsx)(n.td,{children:"query"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"Optional parameter for pagination. Use the ID of the last item from the previous response to retrieve the next set of results."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"limit"}),(0,i.jsx)(n.td,{children:"query"}),(0,i.jsx)(n.td,{children:"integer"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"Optional parameter for pagination, specifying the number of items to return. The actual maximum limit can be defined by the provider."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Authorization"}),(0,i.jsx)(n.td,{children:"header"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Bearer followed by a base64 encoded OAuth access token."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"X-CorAPI-Client-ID"}),(0,i.jsx)(n.td,{children:"header"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"ID of the client forwarded to the provider (SCOPE: FI)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"X-Correlation-ID"}),(0,i.jsx)(n.td,{children:"header"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Unique ID (defined by the caller) which will be reflected back in the response."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"User-Agent"}),(0,i.jsx)(n.td,{children:"header"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Name and version of the of the Client software."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"X-CorAPI-Target-ID"}),(0,i.jsx)(n.td,{children:"header"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"ID of the target, e.g., a financial institution (SCOPE: FI - optional)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"X-PSU-IP-Address"}),(0,i.jsx)(n.td,{children:"header"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"IP address of the user initiating the operation (SCOPE: FI - optional)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"X-PSU-User-Agent"}),(0,i.jsx)(n.td,{children:"header"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"User of the client software (SCOPE: FI - optional)."})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,i.jsx)(n.h3,{id:"200-ok",children:"200 OK"}),"\n",(0,i.jsx)(n.p,{children:"Returns a paginated list of all accounts."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "accounts": [\n    {\n      "account": {\n        "identification": "CH93 0076 2011 6238 5295 7",\n        "type": "IBAN"\n      },\n      "accountOwner": "Max Muster",\n      "accountTypeCode": "CACC",\n      "currency": "CHF",\n      "designation": "Private Account",\n      "id": "CH93-0000-0000-1234",\n      "_links": {\n        "self": "/accounts/CH93-0000-0000-1234",\n        "balance": "/accounts/CH93-0000-0000-1234/balance",\n        "transactions": "/accounts/CH93-0000-0000-1234/transactions"\n      },\n      "allowedCurrencies": ["CHF", "EUR", "USD"]\n    },\n    {\n      "account": {\n        "identification": "CH93 0076 2011 6238 5295 8",\n        "type": "IBAN"\n      },\n      "accountOwner": "Max Muster",\n      "accountTypeCode": "SVNG",\n      "currency": "CHF",\n      "designation": "Savings Account",\n      "id": "CH93-0000-0000-1235",\n      "_links": {\n        "self": "/accounts/CH93-0000-0000-1235",\n        "balance": "/accounts/CH93-0000-0000-1235/balance",\n        "transactions": "/accounts/CH93-0000-0000-1235/transactions"\n      },\n      "allowedCurrencies": ["CHF"]\n    },\n    {\n      "account": {\n        "identification": "CH93 0076 2011 6238 5295 9",\n        "type": "IBAN"\n      },\n      "accountOwner": "Max Muster",\n      "accountTypeCode": "CARD",\n      "currency": "CHF",\n      "designation": "Credit Card Account",\n      "id": "CH93-0000-0000-1236",\n      "_links": {\n        "self": "/accounts/CH93-0000-0000-1236",\n        "balance": "/accounts/CH93-0000-0000-1236/balance",\n        "transactions": "/accounts/CH93-0000-0000-1236/transactions"\n      },\n      "allowedCurrencies": ["CHF", "EUR", "USD"]\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"400-bad-request",children:"400 Bad Request"}),"\n",(0,i.jsx)(n.p,{children:"The format of the request was invalid."}),"\n",(0,i.jsx)(n.h3,{id:"401-unauthorized",children:"401 Unauthorized"}),"\n",(0,i.jsx)(n.p,{children:"The request has not been applied because it provides no valid authentication credentials for the target resource."}),"\n",(0,i.jsx)(n.h3,{id:"403-forbidden",children:"403 Forbidden"}),"\n",(0,i.jsx)(n.p,{children:"A valid OAuth Token was received, but access was denied."}),"\n",(0,i.jsx)(n.h3,{id:"404-not-found",children:"404 Not Found"}),"\n",(0,i.jsx)(n.p,{children:"Either the endpoint does not exist or a requested resource is not yet available."}),"\n",(0,i.jsx)(n.h3,{id:"405-method-not-allowed",children:"405 Method Not Allowed"}),"\n",(0,i.jsx)(n.p,{children:"The method received in the request-line is known by the origin server but not supported by the target resource."}),"\n",(0,i.jsx)(n.h3,{id:"500-internal-server-error",children:"500 Internal Server Error"}),"\n",(0,i.jsx)(n.p,{children:"The server encountered an unexpected condition that prevented it from fulfilling the request."}),"\n",(0,i.jsx)(n.h3,{id:"501-not-implemented",children:"501 Not Implemented"}),"\n",(0,i.jsx)(n.p,{children:"The server does not support the functionality required to fulfill the request."}),"\n",(0,i.jsx)(n.h3,{id:"503-service-unavailable",children:"503 Service Unavailable"}),"\n",(0,i.jsx)(n.p,{children:"The server is currently unable to handle the request due to a temporary overload or scheduled maintenance."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>d});var r=t(6540);const i={},s=r.createContext(i);function c(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);